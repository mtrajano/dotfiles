# TODO: look at :list-keys -T prefix for possible keys to replace with more useful thigns

# Change prefix from C-b to C-a
set -g prefix C-Space

# Makes window/pane indexes 1-based set -g base-index 1
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

set -g aggressive-resize on

# Increase tmux display messages time
set -g display-time 4000

set -s escape-time 50
set -g mouse on

# 256-bit true color
set -g default-terminal "xterm-kitty"

set -g focus-events on

# buffer scroll-back history limit
set -g history-limit 10000

# ========
# BINDINGS
# ========

unbind C-b
unbind %
unbind \"
unbind l
unbind p
unbind n
unbind &

bind r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "Reloaded"

# TEST: testing out lazygit for git workflow
bind g new-window -c "#{pane_current_path}" "lazygit"

bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind l switch-client -l

# window navigation
# TODO: create bindings to go to the first window, last window, create window at end
bind c new-window -c "#{pane_current_path}"
bind c new-window -a -c "#{pane_current_path}"
bind C-Space last-window
bind -r C-p previous-window
bind -r C-n next-window

# since C-l is taken by tmux-navigator bind 'prefix-C-l' to send clear
bind C-l send-keys -R C-l \; clear-history

# run test on another window
set -g remain-on-exit failed # close on success

# resize pane bindings
bind -r L resize-pane -R 5
bind -r H resize-pane -L 5
bind -r K resize-pane -U 5
bind -r J resize-pane -D 5

# swap window
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

# kill-window
bind -r X kill-window
bind O kill-window -a

# kill-pane
bind -r x kill-pane
bind C-o kill-pane -a

# kill-session
bind C-x kill-session

# same width pane
bind = resize-pane -x 50%\; resize-pane -y 50%
bind b choose-buffer
# rotate-panes
bind [ swap-pane -U
bind ] swap-pane -D

# vi keys when in copy mode/paste-mode
# see list-keys -T copy-mode-vi
bind y copy-mode
bind p paste-buffer

# vi style yank and select
set-window-option -g mode-keys vi
set -g status-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi Enter send -X copy-selection

# Incremental search
bind -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
bind / run "tmux copy-mode; tmux send-key /"
bind ? run "tmux copy-mode; tmux send-key ?"

# =======
# PLUGINS
# =======

# tmux-resurrect config
set -g @resurrect-strategy-nvim 'session' # restore nvim sessions
set -g @resurrect-save 'S' # to not clash with tmux bindings
set -g @resurrect-restore 'R' # to not clash with tmux bindings
set -g @resurrect-dir "$XDG_CACHE_HOME/tmux/resurrect"

#tmux-continuum config
set -g @continuum-restore 'on' # automatically restore session on boot
set -g @continuum-boot-options 'alacritty'

set -g @sessionx-bind 's'
set -g @sessionx-x-path "$HOME/dotfiles/.config"
set -g @sessionx-bind-select-up 'ctrl-p'
set -g @sessionx-bind-select-down 'ctrl-n'
set -g @sessionx-bind-kill-session 'ctrl-x' # replaces default alt-backspace
set -g @sessionx-bind-configuration-path 'ctrl-c' # replaces default ctrl-x
set -g @sessionx-bind-back 'ctrl-h' # replaces default ctrl-b
# to be consistent with how I would do it in vim
set -g @sessionx-bind-scroll-up 'ctrl-b' # replaces default ctrl-u
set -g @sessionx-bind-scroll-down 'ctrl-f' # replaces default ctrl-d
set -g @sessionx-bind-zo-new-window 'ctrl-l' # replaces default ctrl-f

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'omerxx/tmux-sessionx' # source: https://github.com/omerxx/tmux-sessionx

set-environment -g TMUX_TPM_PATH "$XDG_DATA_HOME/tmux/plugins/tpm"

if "test ! -d $XDG_DATA_HOME/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $XDG_DATA_HOME/tmux/plugins/tpm && $XDG_DATA_HOME/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$XDG_DATA_HOME/tmux/plugins/tpm/tpm"
